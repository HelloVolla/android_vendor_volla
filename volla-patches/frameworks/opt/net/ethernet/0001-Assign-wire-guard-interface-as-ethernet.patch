From a052217dfb71987a7dfa318d618eb5dd2fc7bba3 Mon Sep 17 00:00:00 2001
From: Erfan Abdi <erfangplus@gmail.com>
Date: Fri, 6 Oct 2023 18:00:56 +0330
Subject: [PATCH] Assign wire-guard interface as ethernet

---
 .../android/server/ethernet/EthernetTracker.java  | 15 ++++++++++-----
 1 file changed, 10 insertions(+), 5 deletions(-)

diff --git a/java/com/android/server/ethernet/EthernetTracker.java b/java/com/android/server/ethernet/EthernetTracker.java
index b2b60fc..e4c96c1 100644
--- a/java/com/android/server/ethernet/EthernetTracker.java
+++ b/java/com/android/server/ethernet/EthernetTracker.java
@@ -20,6 +20,7 @@ import static android.net.TestNetworkManager.TEST_TAP_PREFIX;
 
 import android.annotation.Nullable;
 import android.content.Context;
+import android.os.SystemProperties;
 import android.net.IEthernetServiceListener;
 import android.net.INetd;
 import android.net.ITetheredInterfaceCallback;
@@ -76,6 +77,7 @@ final class EthernetTracker {
     private final static boolean DBG = EthernetNetworkFactory.DBG;
 
     private static final String TEST_IFACE_REGEXP = TEST_TAP_PREFIX + "\\d+";
+    private static final String WG_IFACE_REGEXP =  "wg\\d";
 
     /**
      * Interface names we track. This is a product-dependent regular expression, plus,
@@ -309,7 +311,8 @@ final class EthernetTracker {
             nc = mNetworkCapabilities.get(hwAddress);
             if (nc == null) {
                 final boolean isTestIface = iface.matches(TEST_IFACE_REGEXP);
-                nc = createDefaultNetworkCapabilities(isTestIface);
+                final boolean isWgIface = iface.matches(WG_IFACE_REGEXP) || iface.equals(SystemProperties.get("sys.volla.wg.iface"));
+                nc = createDefaultNetworkCapabilities(isTestIface, isWgIface);
             }
         }
 
@@ -379,7 +382,7 @@ final class EthernetTracker {
     }
 
     private void maybeTrackInterface(String iface) {
-        if (!iface.matches(mIfaceMatch)) {
+        if (!SystemProperties.get("sys.volla.wg.iface").equals(iface) && !iface.matches(mIfaceMatch)) {
             return;
         }
 
@@ -468,7 +471,7 @@ final class EthernetTracker {
         }
     }
 
-    private static NetworkCapabilities createDefaultNetworkCapabilities(boolean isTestIface) {
+    private static NetworkCapabilities createDefaultNetworkCapabilities(boolean isTestIface, boolean isWgIface) {
         NetworkCapabilities.Builder builder = createNetworkCapabilities(
                 false /* clear default capabilities */, null, null)
                 .addCapability(NetworkCapabilities.NET_CAPABILITY_NOT_RESTRICTED)
@@ -483,6 +486,8 @@ final class EthernetTracker {
         } else {
                 builder.addCapability(NetworkCapabilities.NET_CAPABILITY_INTERNET);
         }
+        if (isWgIface)
+                builder.removeCapability(NetworkCapabilities.NET_CAPABILITY_NOT_VPN);
 
         return builder.build();
     }
@@ -635,8 +640,8 @@ final class EthernetTracker {
         final String match = mContext.getResources().getString(
                 com.android.internal.R.string.config_ethernet_iface_regex);
         mIfaceMatch = mIncludeTestInterfaces
-                ? "(" + match + "|" + TEST_IFACE_REGEXP + ")"
-                : match;
+                ? "(" + match + "|" + TEST_IFACE_REGEXP + "|" + WG_IFACE_REGEXP + ")"
+                : "(" + match + "|" + WG_IFACE_REGEXP + ")";
         Log.d(TAG, "Interface match regexp set to '" + mIfaceMatch + "'");
     }
 
-- 
2.29.2


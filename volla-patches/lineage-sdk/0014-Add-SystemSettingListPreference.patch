From ab4f49fe62af35eddb94071d42c2201f37d2d49b Mon Sep 17 00:00:00 2001
From: Your Name <you@example.com>
Date: Wed, 28 Sep 2022 08:55:50 +0200
Subject: [PATCH] Add SystemSettingListPreference

Change-Id: I217954ccfe05113523dd1b5dc44733f1d68dad91
---
 .../SystemSettingListPreference.java          | 51 +++++++++++++++++++
 1 file changed, 51 insertions(+)
 create mode 100644 sdk/src/java/lineageos/preference/SystemSettingListPreference.java

diff --git a/sdk/src/java/lineageos/preference/SystemSettingListPreference.java b/sdk/src/java/lineageos/preference/SystemSettingListPreference.java
new file mode 100644
index 00000000..5f2aa0b9
--- /dev/null
+++ b/sdk/src/java/lineageos/preference/SystemSettingListPreference.java
@@ -0,0 +1,51 @@
+/*
+ * Copyright (C) 2016 The CyanogenMod Project
+ * Copyright (C) 2018 The LineageOS Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package lineageos.preference;
+
+import android.content.Context;
+import android.provider.Settings;
+import android.util.AttributeSet;
+
+public class SystemSettingListPreference extends SelfRemovingListPreference {
+    public SystemSettingListPreference(Context context, AttributeSet attrs, int defStyle) {
+        super(context, attrs, defStyle);
+    }
+
+    public SystemSettingListPreference(Context context, AttributeSet attrs) {
+        super(context, attrs);
+    }
+
+    public int getIntValue(int defValue) {
+        return getValue() == null ? defValue : Integer.valueOf(getValue());
+    }
+
+    @Override
+    protected boolean isPersisted() {
+        return Settings.System.getString(getContext().getContentResolver(), getKey()) != null;
+    }
+
+    @Override
+    protected void putString(String key, String value) {
+        Settings.System.putString(getContext().getContentResolver(), key, value);
+    }
+
+    @Override
+    protected String getString(String key, String defaultValue) {
+        String result = Settings.System.getString(getContext().getContentResolver(), key);
+        return result == null ? defaultValue : result;
+    }
+}
-- 
2.29.2

